// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema
generator client {
    provider = "prisma-client-js"
    previewFeatures = ["postgresqlExtensions"]
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL") // Use environment variables for security.
    extensions = [vector]
}

model User {
    id              String      @id @default(cuid())  // Unique identifier for the user.
    imageUrl        String?                         // URL for the user's profile image (optional).
    firstName       String?                         // User's first name (optional).
    lastName        String?                         // User's last name (optional).
    createdAt       DateTime     @default(now())    // Timestamp when the user record is created.
    updatedAt       DateTime     @updatedAt         // Automatically updated timestamp for modifications.
    emailAddress    String       @unique            // User's email address, must be unique.
    credit          Int          @default(150)      // User's credit balance with a default of 150.
    userToProjects  UserToProject[]
}

model Project {
    id              String      @id @default(cuid())  // Unique identifier for the user.
    name            String                         // URL for the user's profile image (optional).
    repoUrl         String                         // User's first name (optional).
    githubToken     String?                         // User's last name (optional).
    createdAt       DateTime      @default(now())    // Timestamp when the user record is created.
    deletedAt       DateTime?      
    updatedAt       DateTime      @updatedAt         // Automatically updated timestamp for modifications.
    userToProjects  UserToProject[]
    commits         Commit[]
    sourceCodeEmbedding  SourceCodeEmbedding[]
}

model UserToProject {
id                String      @id @default(cuid())  // Unique identifier for the record.
createdAt         DateTime     @default(now())    // Timestamp when the user record is created.
updatedAt         DateTime     @updatedAt         // Automatically updated timestamp for modifications.
userId            String
projectId         String
user              User       @relation(fields: [userId], references: [id])
project           Project    @relation(fields: [projectId], references: [id])

@@unique([userId, projectId])

}

model Commit {
    id                  String          @id @default(cuid())
    createdAt           DateTime     @default(now())    // Timestamp when the user record is created.
    updatedAt           DateTime     @updatedAt         // Automatically updated timestamp for modifications.
    projectId           String
    project             Project    @relation(fields: [projectId], references: [id])
    commitMessage       String
    commitHash          String
    commitAuthorName    String
    commitAuthorAvatar  String
    commitDate          DateTime

    //AI Summary
    summary             String

}

model SourceCodeEmbedding {
    id                  String          @id @default(cuid())
    createdAt           DateTime        @default(now())    // Timestamp when the user record is created.
    updatedAt           DateTime        @updatedAt         // Automatically updated timestamp for modifications.
    projectId           String
    project             Project         @relation(fields: [projectId], references: [id])
    summaryEmbedding    Unsupported("vector(768)")?
    sourceCode          String
    fileName            String

    //AI Summary
    summary             String

}
